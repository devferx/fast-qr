---
import MainLayout from '@/layouts/MainLayout.astro'
import Copy from '@/components/icons/Copy.astro'
---

<MainLayout>
  <section class="mx-auto mt-3 grid max-w-screen-lg grid-cols-2 gap-6">
    <div class="flex flex-col gap-3">
      <h1 class="text-bold text-4xl font-bold">⚡QR Fast</h1>
      <p>Just paste an image with a QR code and see the magic happen!</p>

      <img class="w-full" src="/assets/vectors/hero.svg" />
    </div>

    <div class="flex flex-col gap-3">
      <div class="flex hidden gap-2" id="results-container">
        <input
          id="qr-result"
          class="w-full border border-slate-300 p-2"
          type="text"
          readonly
        />

        <button
          class="w-fit rounded-md border border-transparent bg-[#F59E0B] p-2 text-white"
          id="copy-btn"
        >
          <Copy />
        </button>
      </div>
      <canvas
        class="hidden aspect-square w-full border border-black"
        id="qr-canvas"></canvas>

      <label
        id="qr-file-label"
        for="qr-file-input"
        class="grid aspect-square w-full place-items-center border-[5px] border-dotted border-slate-400"
      >
        <p class="text-center text-slate-400">
          You can paste an image with a QR code here
        </p>
      </label>

      <input id="qr-file-input" class="hidden" type="file" />
    </div>
  </section>
</MainLayout>

<script>
  import {
    getImageFromClipboardAsBlob,
    getImageFromClipboardAsImageData,
  } from '@/utils/clipboard'
  import jsQR from 'jsqr'

  const $qrResultContainer = document.getElementById(
    'results-container',
  ) as HTMLDivElement
  const $qrFileLabel = document.getElementById(
    'qr-file-label',
  ) as HTMLLabelElement
  const $qrFileInput = document.getElementById(
    'qr-file-input',
  ) as HTMLInputElement

  const $qrResult = document.getElementById('qr-result') as HTMLInputElement
  const $copyBtn = document.getElementById('copy-btn') as HTMLButtonElement

  // Canvas to draw the QR code
  const $qrCanvas = document.getElementById('qr-canvas') as HTMLCanvasElement
  const qrCanvasContext = $qrCanvas.getContext('2d')!

  const updateQRCanvas = (image: File) => {
    const img = new Image()
    const URLObj = window.URL || window.webkitURL

    img.onload = function () {
      $qrCanvas.width = img.width
      $qrCanvas.height = img.height

      qrCanvasContext.fillStyle = 'white'
      qrCanvasContext.fillRect(0, 0, $qrCanvas.width, $qrCanvas.height)

      qrCanvasContext.drawImage(img, 0, 0)
    }

    img.src = URLObj.createObjectURL(image)
  }

  window.addEventListener('paste', async function (pasteEvent) {
    const image = getImageFromClipboardAsBlob(pasteEvent)
    if (!image) return

    updateQRCanvas(image)
    const imageData = await getImageFromClipboardAsImageData(pasteEvent)
    const qrCode = jsQR(imageData.data, imageData.width, imageData.height)

    $qrFileLabel.classList.add('hidden')
    $qrCanvas.classList.remove('hidden')
    $qrResultContainer.classList.remove('hidden')

    $qrResult.value = qrCode?.data || 'No QR code found'
  })

  $qrFileInput.addEventListener('change', function (changeEvent: Event) {
    const file = ($qrFileInput.files as FileList)[0]
    if (!file) return

    updateQRCanvas(file)
    const reader = new FileReader()

    reader.onload = function (e) {
      const img = new Image()
      img.onload = function () {
        const canvas = document.createElement('canvas')
        const ctx = canvas.getContext('2d')!

        canvas.width = img.width
        canvas.height = img.height
        // Draw white background
        ctx.fillStyle = 'white'
        ctx.fillRect(0, 0, canvas.width, canvas.height)

        ctx.drawImage(img, 0, 0)

        const imageData = ctx.getImageData(0, 0, img.width, img.height)
        const qrCode = jsQR(imageData.data, imageData.width, imageData.height)

        $qrFileLabel.classList.add('hidden')
        $qrCanvas.classList.remove('hidden')
        $qrResultContainer.classList.remove('hidden')

        $qrResult.value = qrCode?.data || 'No QR code found'
      }

      img.src = e.target?.result as string
    }

    reader.readAsDataURL(file)
  })

  $copyBtn.addEventListener('click', function () {
    // Get the text field
    const copyText = $qrResult.value

    navigator.clipboard.writeText(copyText).then(
      function () {
        alert('✅ Copied to clipboard!')
      },
      function (err) {
        alert('❌ Failed to copy to clipboard!')
        console.error('Failed to copy to clipboard', err)
      },
    )
  })
</script>
